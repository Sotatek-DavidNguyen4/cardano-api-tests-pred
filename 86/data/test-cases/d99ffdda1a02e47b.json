{"uid":"d99ffdda1a02e47b","name":"verify that get data for address analytics unSuccessfully with address","fullName":"tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress","historyId":"e59acac0963835faa829c55e749dab57","time":{"start":1693505482672,"stop":1693505484541,"duration":1869},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1693505468863,"stop":1693505469606,"duration":743},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1693505482668,"stop":1693505482669,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get an adddress analytics","time":{"start":1693505482672,"stop":1693505484534,"duration":1862},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"address","value":"null"},{"name":"type","value":"TWO_WEEK"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Verify error response","time":{"start":1693505484534,"stop":1693505484541,"duration":7},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"statusCode","value":"400"},{"name":"message","value":"Wallet address not found"},{"name":"errorCode","value":"BC_404-ADDRESS_NOT_FOUND"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1693505484542,"stop":1693505484542,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"postconditions","time":{"start":1693505734921,"stop":1693505734921,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testClass","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testMethod","value":"verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.addresses.AddressAnalyticsTests"},{"name":"host","value":"fv-az805-611"},{"name":"thread","value":"2202@fv-az805-611.TestNG-test=Cardano API test -3(14)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"api-addresses"},{"name":"epic","value":"cardano"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"null"},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":70,"broken":2,"skipped":0,"passed":13,"unknown":0,"total":85},"items":[{"uid":"d2566343b117b8ba","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/85//#testresult/d2566343b117b8ba","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1693419095139,"stop":1693419096932,"duration":1793}},{"uid":"79f9301223300ab2","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/84//#testresult/79f9301223300ab2","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1693332691192,"stop":1693332693098,"duration":1906}},{"uid":"c53e7c22b0080cee","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/83//#testresult/c53e7c22b0080cee","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1693246290434,"stop":1693246292495,"duration":2061}},{"uid":"91a702c92b1bd48","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/82//#testresult/91a702c92b1bd48","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1693159795815,"stop":1693159797894,"duration":2079}},{"uid":"f652ae6b47853b5e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/81//#testresult/f652ae6b47853b5e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1693073428417,"stop":1693073430005,"duration":1588}},{"uid":"6bbcf4f78f41c7ef","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/80//#testresult/6bbcf4f78f41c7ef","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692987081937,"stop":1692987083907,"duration":1970}},{"uid":"35657cca4dc1f00a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/79//#testresult/35657cca4dc1f00a","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692900689420,"stop":1692900691218,"duration":1798}},{"uid":"8e39b39820e0a858","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/78//#testresult/8e39b39820e0a858","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692814145615,"stop":1692814147464,"duration":1849}},{"uid":"d6ead758194c8792","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/77//#testresult/d6ead758194c8792","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692727874337,"stop":1692727876263,"duration":1926}},{"uid":"7dd27e70f7033f4e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/76//#testresult/7dd27e70f7033f4e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692641418777,"stop":1692641420414,"duration":1637}},{"uid":"27d8e723c04b1b7","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/75//#testresult/27d8e723c04b1b7","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692554997615,"stop":1692554999436,"duration":1821}},{"uid":"2e8c99f4c863eaa4","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/74//#testresult/2e8c99f4c863eaa4","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692468586764,"stop":1692468588724,"duration":1960}},{"uid":"605564322be562ab","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/73//#testresult/605564322be562ab","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692382262651,"stop":1692382264311,"duration":1660}},{"uid":"87c0e4a4ed3f3bbf","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/72//#testresult/87c0e4a4ed3f3bbf","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692295874735,"stop":1692295876280,"duration":1545}},{"uid":"d28f87e41a8ec280","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/71//#testresult/d28f87e41a8ec280","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692209452612,"stop":1692209454548,"duration":1936}},{"uid":"db49c5ad8c9e91ca","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/70//#testresult/db49c5ad8c9e91ca","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692123052908,"stop":1692123054634,"duration":1726}},{"uid":"5d463968297ccd0b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/69//#testresult/5d463968297ccd0b","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692036674285,"stop":1692036676304,"duration":2019}},{"uid":"8eeff7f052215f4c","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/68//#testresult/8eeff7f052215f4c","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691950208860,"stop":1691950210872,"duration":2012}},{"uid":"a369190514448ac","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/67//#testresult/a369190514448ac","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691863823577,"stop":1691863825119,"duration":1542}},{"uid":"70cbfb2b52a447ef","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/66//#testresult/70cbfb2b52a447ef","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691777469531,"stop":1691777471018,"duration":1487}}]},"tags":[]},"source":"d99ffdda1a02e47b.json","parameterValues":["null","preprod"]}