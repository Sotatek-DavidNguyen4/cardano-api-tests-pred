{"uid":"2c187d582e6e596c","name":"Get the transaction by valid hash","fullName":"tests.transaction.TransactionTests.get_transaction_by_hash","historyId":"35d8484ddc3d1f564bf551bb21a04521","time":{"start":1688667360086,"stop":1688667361888,"duration":1802},"status":"failed","statusMessage":"[Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>","statusTrace":"org.junit.ComparisonFailure: [Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>\n\tat sun.reflect.GeneratedConstructorAccessor110.newInstance(Unknown Source)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat microservices.txn.steps.TransactionSteps.then_verifyTransactionResponseWithDataTest(TransactionSteps.java:122)\n\tat tests.transaction.TransactionTests.get_transaction_by_hash(TransactionTests.java:149)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1688667118728,"stop":1688667119488,"duration":760},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"setUp","time":{"start":1688667360085,"stop":1688667360085,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"[Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>","statusTrace":"org.junit.ComparisonFailure: [Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>\n\tat sun.reflect.GeneratedConstructorAccessor110.newInstance(Unknown Source)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat microservices.txn.steps.TransactionSteps.then_verifyTransactionResponseWithDataTest(TransactionSteps.java:122)\n\tat tests.transaction.TransactionTests.get_transaction_by_hash(TransactionTests.java:149)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"Get transaction by hash","time":{"start":1688667360087,"stop":1688667361873,"duration":1786},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"hash","value":"1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Verify transaction response","time":{"start":1688667361874,"stop":1688667361885,"duration":11},"status":"failed","statusMessage":"[Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>","statusTrace":"org.junit.ComparisonFailure: [Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>\n\tat sun.reflect.GeneratedConstructorAccessor110.newInstance(Unknown Source)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat microservices.txn.steps.TransactionSteps.then_verifyTransactionResponseWithDataTest(TransactionSteps.java:122)\n\tat tests.transaction.TransactionTests.get_transaction_by_hash(TransactionTests.java:149)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"txnResponse","value":"TransactionResponse(tx=TransactionInfo(hash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, time=2023/05/09 04:13:55, blockNo=917218, blockHash=f7b31db67db400ac5b774a711b62ceb65bb260089fed7890537099f263ff0b44, epochSlot=188035, maxEpochSlot=432000, epochNo=68, status=SUCCESS, confirmation=214365, fee=194871, outSum=10610487), summary=TransactionResponse.Summary(stakeAddressTxInputs=null, stakeAddressTxOutputs=null), contracts=[TransactionResponse.Contract(contract=null)], collaterals=TransactionResponse.Collaterals(collateralInputResponses=[TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=000a4e97526c211d18b6a93c89ab1f24990a2e04b0d6b6819022f599e3708ff4, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=004649e95bab6abd01306e0e1efa1b6897870228ff5f6e29ba55be1f353d8682, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=00307f981f0d145467cc2a89f139cb3578178a2b1f7c59dbdc2c0fa5fdadb546, value=4805533, tokens=[])], collateralOutputResponses=[TransactionResponse.Collaterals.CollateralOutputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=3, txHash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, value=14130046, tokens=[])]))"},{"name":"responseExpected","value":"TransactionResponse(tx=TransactionInfo(hash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, time=null, blockNo=917218, blockHash=f7b31db67db400ac5b774a711b62ceb65bb260089fed7890537099f263ff0b44, epochSlot=0, maxEpochSlot=432000, epochNo=68, status=null, confirmation=0, fee=0, outSum=0), summary=TransactionResponse.Summary(stakeAddressTxInputs=null, stakeAddressTxOutputs=null), contracts=[TransactionResponse.Contract(contract=addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r)], collaterals=TransactionResponse.Collaterals(collateralInputResponses=[TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=000a4e97526c211d18b6a93c89ab1f24990a2e04b0d6b6819022f599e3708ff4, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=004649e95bab6abd01306e0e1efa1b6897870228ff5f6e29ba55be1f353d8682, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=00307f981f0d145467cc2a89f139cb3578178a2b1f7c59dbdc2c0fa5fdadb546, value=4805533, tokens=[])], collateralOutputResponses=[TransactionResponse.Collaterals.CollateralOutputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=3, txHash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, value=14130046, tokens=[])]))"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false},"afterStages":[{"name":"tearDown","time":{"start":1688667361892,"stop":1688667361892,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"postconditions","time":{"start":1688667377869,"stop":1688667377870,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"package","value":"tests.transaction.TransactionTests"},{"name":"testClass","value":"tests.transaction.TransactionTests"},{"name":"testMethod","value":"get_transaction_by_hash"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.transaction.TransactionTests"},{"name":"host","value":"fv-az248-4"},{"name":"thread","value":"2420@fv-az248-4.TestNG-test=Cardano API test -2(13)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"api-transactions"},{"name":"epic","value":"cardano"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"TransactionResponse(tx=TransactionInfo(hash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, time=null, blockNo=917218, blockHash=f7b31db67db400ac5b774a711b62ceb65bb260089fed7890537099f263ff0b44, epochSlot=0, maxEpochSlot=432000, epochNo=68, status=null, confirmation=0, fee=0, outSum=0), summary=TransactionResponse.Summary(stakeAddressTxInputs=null, stakeAddressTxOutputs=null), contracts=[TransactionResponse.Contract(contract=addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r)], collaterals=TransactionResponse.Collaterals(collateralInputResponses=[TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=000a4e97526c211d18b6a93c89ab1f24990a2e04b0d6b6819022f599e3708ff4, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=004649e95bab6abd01306e0e1efa1b6897870228ff5f6e29ba55be1f353d8682, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=00307f981f0d145467cc2a89f139cb3578178a2b1f7c59dbdc2c0fa5fdadb546, value=4805533, tokens=[])], collateralOutputResponses=[TransactionResponse.Collaterals.CollateralOutputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=3, txHash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, value=14130046, tokens=[])]))"},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":3,"broken":1,"skipped":0,"passed":25,"unknown":0,"total":29},"items":[{"uid":"f3f173f3552a8e13","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/29//#testresult/f3f173f3552a8e13","status":"failed","statusDetails":"[Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>","time":{"start":1688581029064,"stop":1688581030744,"duration":1680}},{"uid":"9bbd3dd5c6f4d66a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/28//#testresult/9bbd3dd5c6f4d66a","status":"failed","statusDetails":"[Value of field 'tx.contracts' is wrong] expected:<...e.Contract(contract=[addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r])]> but was:<...e.Contract(contract=[null])]>","time":{"start":1688494620269,"stop":1688494621841,"duration":1572}},{"uid":"b2f585024bafe8c4","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/27//#testresult/b2f585024bafe8c4","status":"passed","time":{"start":1688408143956,"stop":1688408145428,"duration":1472}},{"uid":"9029ab76837466f6","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/26//#testresult/9029ab76837466f6","status":"passed","time":{"start":1688321707276,"stop":1688321708900,"duration":1624}},{"uid":"e85e056af67fad1f","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/25//#testresult/e85e056af67fad1f","status":"passed","time":{"start":1688235298634,"stop":1688235300190,"duration":1556}},{"uid":"a1b0f4139f240bea","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/24//#testresult/a1b0f4139f240bea","status":"passed","time":{"start":1688148947493,"stop":1688148949092,"duration":1599}},{"uid":"34beefb318ec5c38","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/23//#testresult/34beefb318ec5c38","status":"passed","time":{"start":1688062791068,"stop":1688062792990,"duration":1922}},{"uid":"5bf0caec8e667d98","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/22//#testresult/5bf0caec8e667d98","status":"passed","time":{"start":1687976220853,"stop":1687976222801,"duration":1948}},{"uid":"f0a072b268025de9","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/21//#testresult/f0a072b268025de9","status":"passed","time":{"start":1687889770374,"stop":1687889771987,"duration":1613}},{"uid":"6748f4833cdf7671","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/20//#testresult/6748f4833cdf7671","status":"passed","time":{"start":1687803392477,"stop":1687803394079,"duration":1602}},{"uid":"246a2abf6e174299","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/19//#testresult/246a2abf6e174299","status":"passed","time":{"start":1687716975182,"stop":1687716977090,"duration":1908}},{"uid":"82f3ba556fcda197","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/18//#testresult/82f3ba556fcda197","status":"passed","time":{"start":1687630551187,"stop":1687630553150,"duration":1963}},{"uid":"d5e1bbeaaadbc50a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/17//#testresult/d5e1bbeaaadbc50a","status":"passed","time":{"start":1687544207985,"stop":1687544209952,"duration":1967}},{"uid":"94869de43bc91e6b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/16//#testresult/94869de43bc91e6b","status":"passed","time":{"start":1687457674936,"stop":1687457676480,"duration":1544}},{"uid":"538270d47e5e9ac9","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/15//#testresult/538270d47e5e9ac9","status":"broken","statusDetails":"Read timed out","time":{"start":1687378589374,"stop":1687378650996,"duration":61622}},{"uid":"1203688b11a31e63","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/14//#testresult/1203688b11a31e63","status":"passed","time":{"start":1687284878069,"stop":1687284880083,"duration":2014}},{"uid":"51c82d1c78f8fadd","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/13//#testresult/51c82d1c78f8fadd","status":"passed","time":{"start":1687198534975,"stop":1687198536654,"duration":1679}},{"uid":"e269f768867bdde9","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/12//#testresult/e269f768867bdde9","status":"passed","time":{"start":1687112070126,"stop":1687112071874,"duration":1748}},{"uid":"f42fe67002cca653","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/11//#testresult/f42fe67002cca653","status":"passed","time":{"start":1687025680763,"stop":1687025682683,"duration":1920}},{"uid":"d7530eeace51f4b3","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/10//#testresult/d7530eeace51f4b3","status":"passed","time":{"start":1686939313208,"stop":1686939315168,"duration":1960}}]},"tags":[]},"source":"2c187d582e6e596c.json","parameterValues":["TransactionResponse(tx=TransactionInfo(hash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, time=null, blockNo=917218, blockHash=f7b31db67db400ac5b774a711b62ceb65bb260089fed7890537099f263ff0b44, epochSlot=0, maxEpochSlot=432000, epochNo=68, status=null, confirmation=0, fee=0, outSum=0), summary=TransactionResponse.Summary(stakeAddressTxInputs=null, stakeAddressTxOutputs=null), contracts=[TransactionResponse.Contract(contract=addr_test1wqree2k788nclw4ufm9sj9znka62e3j7chl640ksms5y3gc5zy36r)], collaterals=TransactionResponse.Collaterals(collateralInputResponses=[TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=000a4e97526c211d18b6a93c89ab1f24990a2e04b0d6b6819022f599e3708ff4, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=004649e95bab6abd01306e0e1efa1b6897870228ff5f6e29ba55be1f353d8682, value=4808410, tokens=[]), TransactionResponse.Collaterals.CollateralInputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=2, txHash=00307f981f0d145467cc2a89f139cb3578178a2b1f7c59dbdc2c0fa5fdadb546, value=4805533, tokens=[])], collateralOutputResponses=[TransactionResponse.Collaterals.CollateralOutputResponse(address=addr_test1vpdcxfkxj8glc8yqnw76q3zdgtw8kg86lchtv60r7zrrxyqk3yrd0, index=3, txHash=1b82c66a192068f3ab6bab8676ae3001931aa4e9346c274ade08cb98523f52f6, value=14130046, tokens=[])]))","preprod"]}