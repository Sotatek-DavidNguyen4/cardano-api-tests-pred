{"uid":"263791fe0227b363","name":"verify that get data for address analytics unSuccessfully with address","fullName":"tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress","historyId":"e59acac0963835faa829c55e749dab57","time":{"start":1688667135920,"stop":1688667137702,"duration":1782},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1688667118728,"stop":1688667119488,"duration":760},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"setUp","time":{"start":1688667135918,"stop":1688667135918,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get an adddress analytics","time":{"start":1688667135922,"stop":1688667137699,"duration":1777},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"address","value":"null"},{"name":"type","value":"TWO_WEEK"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"Verify error response","time":{"start":1688667137700,"stop":1688667137702,"duration":2},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"statusCode","value":"400"},{"name":"message","value":"Wallet address not found"},{"name":"errorCode","value":"BC_404-ADDRESS_NOT_FOUND"}],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false},"afterStages":[{"name":"tearDown","time":{"start":1688667137704,"stop":1688667137704,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"postconditions","time":{"start":1688667377869,"stop":1688667377870,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"package","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testClass","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testMethod","value":"verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.addresses.AddressAnalyticsTests"},{"name":"host","value":"fv-az248-4"},{"name":"thread","value":"2420@fv-az248-4.TestNG-test=Cardano API test -3(14)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"epic","value":"cardano"},{"name":"feature","value":"api-addresses"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"null"},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":15,"broken":1,"skipped":0,"passed":13,"unknown":0,"total":29},"items":[{"uid":"518a4fdea38dda8e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/29//#testresult/518a4fdea38dda8e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688580807864,"stop":1688580809549,"duration":1685}},{"uid":"7bb21e360a9e29c0","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/28//#testresult/7bb21e360a9e29c0","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688494423024,"stop":1688494424579,"duration":1555}},{"uid":"ef377e751554728f","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/27//#testresult/ef377e751554728f","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688407959758,"stop":1688407961203,"duration":1445}},{"uid":"972c52161dced96c","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/26//#testresult/972c52161dced96c","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688321510306,"stop":1688321511847,"duration":1541}},{"uid":"a0218de9465bb1f1","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/25//#testresult/a0218de9465bb1f1","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688235098493,"stop":1688235100078,"duration":1585}},{"uid":"db7e18ff7522a319","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/24//#testresult/db7e18ff7522a319","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688148748298,"stop":1688148749874,"duration":1576}},{"uid":"9871950648fb6fdc","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/23//#testresult/9871950648fb6fdc","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688062571896,"stop":1688062573626,"duration":1730}},{"uid":"fc5aa5fa0fe33cec","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/22//#testresult/fc5aa5fa0fe33cec","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1687975976272,"stop":1687975978089,"duration":1817}},{"uid":"6dbb9d730e7bfb91","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/21//#testresult/6dbb9d730e7bfb91","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687889570691,"stop":1687889572207,"duration":1516}},{"uid":"2624094f1658e8d9","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/20//#testresult/2624094f1658e8d9","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687803192794,"stop":1687803194287,"duration":1493}},{"uid":"c544cb51d7fdf683","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/19//#testresult/c544cb51d7fdf683","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687716735086,"stop":1687716736979,"duration":1893}},{"uid":"a3cae0ee6a07d501","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/18//#testresult/a3cae0ee6a07d501","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687630317583,"stop":1687630319434,"duration":1851}},{"uid":"c9979529358d99ed","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/17//#testresult/c9979529358d99ed","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687543967094,"stop":1687543969008,"duration":1914}},{"uid":"a11e7cce4f7d302f","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/16//#testresult/a11e7cce4f7d302f","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687457478865,"stop":1687457480378,"duration":1513}},{"uid":"311621bc1860b3f9","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/15//#testresult/311621bc1860b3f9","status":"broken","statusDetails":"Read timed out","time":{"start":1687371316522,"stop":1687371378184,"duration":61662}},{"uid":"d0f7d45d577eeab9","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/14//#testresult/d0f7d45d577eeab9","status":"passed","time":{"start":1687284623329,"stop":1687284625257,"duration":1928}},{"uid":"dfd51a97560ff104","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/13//#testresult/dfd51a97560ff104","status":"passed","time":{"start":1687198322723,"stop":1687198324361,"duration":1638}},{"uid":"a071a166b139fef1","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/12//#testresult/a071a166b139fef1","status":"passed","time":{"start":1687111848717,"stop":1687111850440,"duration":1723}},{"uid":"f0990c1cb057fe1","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/11//#testresult/f0990c1cb057fe1","status":"passed","time":{"start":1687025430638,"stop":1687025432593,"duration":1955}},{"uid":"980b89257c706967","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/10//#testresult/980b89257c706967","status":"passed","time":{"start":1686939063233,"stop":1686939065179,"duration":1946}}]},"tags":[]},"source":"263791fe0227b363.json","parameterValues":["null","preprod"]}