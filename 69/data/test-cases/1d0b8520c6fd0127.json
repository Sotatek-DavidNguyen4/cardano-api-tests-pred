{"uid":"1d0b8520c6fd0127","name":"verify that get data for address analytics unSuccessfully with address","fullName":"tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress","historyId":"b86375e47bae5e85bd9f601d66ee2bf8","time":{"start":1692036676308,"stop":1692036678250,"duration":1942},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1692036661449,"stop":1692036662162,"duration":713},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1692036676306,"stop":1692036676306,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get an adddress analytics","time":{"start":1692036676308,"stop":1692036678248,"duration":1940},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"address","value":" "},{"name":"type","value":"TWO_WEEK"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Verify error response","time":{"start":1692036678248,"stop":1692036678250,"duration":2},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"statusCode","value":"400"},{"name":"message","value":"Wallet address not found"},{"name":"errorCode","value":"BC_404-ADDRESS_NOT_FOUND"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1692036678252,"stop":1692036678252,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"postconditions","time":{"start":1692036946359,"stop":1692036946359,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testClass","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testMethod","value":"verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.addresses.AddressAnalyticsTests"},{"name":"host","value":"fv-az626-576"},{"name":"thread","value":"2257@fv-az626-576.TestNG-test=Cardano API test -3(14)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"epic","value":"cardano"},{"name":"feature","value":"api-addresses"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":" "},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":53,"broken":2,"skipped":0,"passed":13,"unknown":0,"total":68},"items":[{"uid":"c1c546f5ebfd4b19","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/68//#testresult/c1c546f5ebfd4b19","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691950210876,"stop":1691950212853,"duration":1977}},{"uid":"c1ddb3fedfb7e1cd","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/67//#testresult/c1ddb3fedfb7e1cd","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691863825125,"stop":1691863826625,"duration":1500}},{"uid":"ef4c972c05d7b270","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/66//#testresult/ef4c972c05d7b270","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691777471026,"stop":1691777472531,"duration":1505}},{"uid":"3d38961c283c3f4b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/65//#testresult/3d38961c283c3f4b","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691691098827,"stop":1691691100323,"duration":1496}},{"uid":"aff1670a1bc674a2","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/64//#testresult/aff1670a1bc674a2","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691604720178,"stop":1691604722142,"duration":1964}},{"uid":"1f574c62c08ba6bb","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/63//#testresult/1f574c62c08ba6bb","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691518316050,"stop":1691518318040,"duration":1990}},{"uid":"50b730a38632343c","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/62//#testresult/50b730a38632343c","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691431856672,"stop":1691431858736,"duration":2064}},{"uid":"dd182fcd05494d33","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/61//#testresult/dd182fcd05494d33","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691345420710,"stop":1691345422332,"duration":1622}},{"uid":"f6c01a0f534c4a10","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/60//#testresult/f6c01a0f534c4a10","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691258996012,"stop":1691258997996,"duration":1984}},{"uid":"e9dd185bfa50d4d3","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/59//#testresult/e9dd185bfa50d4d3","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691172671760,"stop":1691172673533,"duration":1773}},{"uid":"e713df8523d81776","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/58//#testresult/e713df8523d81776","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691086258597,"stop":1691086260467,"duration":1870}},{"uid":"f108518f27b6ba42","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/57//#testresult/f108518f27b6ba42","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690999872302,"stop":1690999874096,"duration":1794}},{"uid":"4755e764f3ac69f8","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/56//#testresult/4755e764f3ac69f8","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690913461067,"stop":1690913463025,"duration":1958}},{"uid":"39988995304beeda","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/55//#testresult/39988995304beeda","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690827096348,"stop":1690827097985,"duration":1637}},{"uid":"66811d5a8eb3a214","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/54//#testresult/66811d5a8eb3a214","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690740607493,"stop":1690740609282,"duration":1789}},{"uid":"616720f18cd56311","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/53//#testresult/616720f18cd56311","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690654230236,"stop":1690654232110,"duration":1874}},{"uid":"fe1af6d09158a37d","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/52//#testresult/fe1af6d09158a37d","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690567842157,"stop":1690567843952,"duration":1795}},{"uid":"bbf32beeede0af17","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/51//#testresult/bbf32beeede0af17","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690481482492,"stop":1690481484149,"duration":1657}},{"uid":"f46cd78fce2ab12e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/50//#testresult/f46cd78fce2ab12e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690395058250,"stop":1690395060137,"duration":1887}},{"uid":"20488b2e706e3f8d","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/49//#testresult/20488b2e706e3f8d","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690308682832,"stop":1690308684279,"duration":1447}}]},"tags":[]},"source":"1d0b8520c6fd0127.json","parameterValues":[" ","preprod"]}