{"uid":"da20608fed47e86f","name":"verify that get data for address analytics unSuccessfully with address","fullName":"tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress","historyId":"e59acac0963835faa829c55e749dab57","time":{"start":1690049447066,"stop":1690049448619,"duration":1553},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1690049436124,"stop":1690049436830,"duration":706},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1690049447064,"stop":1690049447064,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get an adddress analytics","time":{"start":1690049447066,"stop":1690049448617,"duration":1551},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"address","value":"null"},{"name":"type","value":"TWO_WEEK"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Verify error response","time":{"start":1690049448617,"stop":1690049448619,"duration":2},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"statusCode","value":"400"},{"name":"message","value":"Wallet address not found"},{"name":"errorCode","value":"BC_404-ADDRESS_NOT_FOUND"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1690049448622,"stop":1690049448622,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"postconditions","time":{"start":1690049677735,"stop":1690049677735,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testClass","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testMethod","value":"verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.addresses.AddressAnalyticsTests"},{"name":"host","value":"fv-az456-820"},{"name":"thread","value":"2485@fv-az456-820.TestNG-test=Cardano API test -3(14)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"epic","value":"cardano"},{"name":"feature","value":"api-addresses"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"null"},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":2,"skipped":0,"passed":13,"unknown":0,"total":45},"items":[{"uid":"7d9d1f9d97995857","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/45//#testresult/7d9d1f9d97995857","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689963144628,"stop":1689963146481,"duration":1853}},{"uid":"df8d0a3009de8946","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/44//#testresult/df8d0a3009de8946","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689876683035,"stop":1689876684605,"duration":1570}},{"uid":"a0e3e7346d00cb97","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/43//#testresult/a0e3e7346d00cb97","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689790305679,"stop":1689790307173,"duration":1494}},{"uid":"91f2ccbda19793d8","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/42//#testresult/91f2ccbda19793d8","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689703975774,"stop":1689703977684,"duration":1910}},{"uid":"e9d9560d0341619e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/41//#testresult/e9d9560d0341619e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689617592621,"stop":1689617594390,"duration":1769}},{"uid":"56c28b312eb6cfd4","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/40//#testresult/56c28b312eb6cfd4","status":"broken","statusDetails":"Read timed out","time":{"start":1689531347308,"stop":1689531409039,"duration":61731}},{"uid":"a762fc4dc9534659","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/39//#testresult/a762fc4dc9534659","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689444709969,"stop":1689444711847,"duration":1878}},{"uid":"8d3b228bb2ac982a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/38//#testresult/8d3b228bb2ac982a","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689358338844,"stop":1689358340504,"duration":1660}},{"uid":"26f30e749df6dcc9","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/37//#testresult/26f30e749df6dcc9","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689271969317,"stop":1689271970959,"duration":1642}},{"uid":"a60e4d6002cee1ce","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/36//#testresult/a60e4d6002cee1ce","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689185563981,"stop":1689185565745,"duration":1764}},{"uid":"96edb2684ed9db81","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/35//#testresult/96edb2684ed9db81","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689099190579,"stop":1689099192155,"duration":1576}},{"uid":"9715c697a77f9c37","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/34//#testresult/9715c697a77f9c37","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689012788095,"stop":1689012789835,"duration":1740}},{"uid":"a3b99614787e8f87","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/33//#testresult/a3b99614787e8f87","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688926316842,"stop":1688926318798,"duration":1956}},{"uid":"3ad1441b00094285","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/32//#testresult/3ad1441b00094285","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688839921460,"stop":1688839922891,"duration":1431}},{"uid":"e137d69618ccba03","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/31//#testresult/e137d69618ccba03","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688753576108,"stop":1688753577538,"duration":1430}},{"uid":"263791fe0227b363","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/30//#testresult/263791fe0227b363","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688667135920,"stop":1688667137702,"duration":1782}},{"uid":"518a4fdea38dda8e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/29//#testresult/518a4fdea38dda8e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688580807864,"stop":1688580809549,"duration":1685}},{"uid":"7bb21e360a9e29c0","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/28//#testresult/7bb21e360a9e29c0","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688494423024,"stop":1688494424579,"duration":1555}},{"uid":"ef377e751554728f","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/27//#testresult/ef377e751554728f","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688407959758,"stop":1688407961203,"duration":1445}},{"uid":"972c52161dced96c","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/26//#testresult/972c52161dced96c","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688321510306,"stop":1688321511847,"duration":1541}}]},"tags":[]},"source":"da20608fed47e86f.json","parameterValues":["null","preprod"]}