{"uid":"db49c5ad8c9e91ca","name":"verify that get data for address analytics unSuccessfully with address","fullName":"tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress","historyId":"e59acac0963835faa829c55e749dab57","time":{"start":1692123052908,"stop":1692123054634,"duration":1726},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1692123036540,"stop":1692123037282,"duration":742},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1692123052906,"stop":1692123052906,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get an adddress analytics","time":{"start":1692123052908,"stop":1692123054632,"duration":1724},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"address","value":"null"},{"name":"type","value":"TWO_WEEK"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Verify error response","time":{"start":1692123054632,"stop":1692123054634,"duration":2},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"statusCode","value":"400"},{"name":"message","value":"Wallet address not found"},{"name":"errorCode","value":"BC_404-ADDRESS_NOT_FOUND"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1692123054635,"stop":1692123054636,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"postconditions","time":{"start":1692123288427,"stop":1692123288428,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testClass","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testMethod","value":"verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.addresses.AddressAnalyticsTests"},{"name":"host","value":"fv-az570-769"},{"name":"thread","value":"2375@fv-az570-769.TestNG-test=Cardano API test -3(14)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"api-addresses"},{"name":"epic","value":"cardano"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"null"},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":54,"broken":2,"skipped":0,"passed":13,"unknown":0,"total":69},"items":[{"uid":"5d463968297ccd0b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/69//#testresult/5d463968297ccd0b","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1692036674285,"stop":1692036676304,"duration":2019}},{"uid":"8eeff7f052215f4c","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/68//#testresult/8eeff7f052215f4c","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691950208860,"stop":1691950210872,"duration":2012}},{"uid":"a369190514448ac","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/67//#testresult/a369190514448ac","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691863823577,"stop":1691863825119,"duration":1542}},{"uid":"70cbfb2b52a447ef","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/66//#testresult/70cbfb2b52a447ef","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691777469531,"stop":1691777471018,"duration":1487}},{"uid":"f928cfaafc866ca7","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/65//#testresult/f928cfaafc866ca7","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691691097315,"stop":1691691098821,"duration":1506}},{"uid":"eddf04b4f2a702c3","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/64//#testresult/eddf04b4f2a702c3","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691604718169,"stop":1691604720173,"duration":2004}},{"uid":"d3405316aa414fa0","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/63//#testresult/d3405316aa414fa0","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691518314047,"stop":1691518316046,"duration":1999}},{"uid":"976e5b56e9af0a3e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/62//#testresult/976e5b56e9af0a3e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691431854509,"stop":1691431856665,"duration":2156}},{"uid":"86316b64867788ab","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/61//#testresult/86316b64867788ab","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691345419052,"stop":1691345420705,"duration":1653}},{"uid":"db08d6563622aebd","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/60//#testresult/db08d6563622aebd","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691258994013,"stop":1691258996006,"duration":1993}},{"uid":"ce39dd41ff6c0b09","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/59//#testresult/ce39dd41ff6c0b09","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691172669996,"stop":1691172671755,"duration":1759}},{"uid":"36c9abe96dee120b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/58//#testresult/36c9abe96dee120b","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691086256665,"stop":1691086258594,"duration":1929}},{"uid":"4ce69bc42490cd99","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/57//#testresult/4ce69bc42490cd99","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690999870516,"stop":1690999872296,"duration":1780}},{"uid":"3eb013559ece0f6","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/56//#testresult/3eb013559ece0f6","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690913459034,"stop":1690913461061,"duration":2027}},{"uid":"f887324be2d74830","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/55//#testresult/f887324be2d74830","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690827094708,"stop":1690827096337,"duration":1629}},{"uid":"e78ad0b0608b0fcc","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/54//#testresult/e78ad0b0608b0fcc","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690740605700,"stop":1690740607485,"duration":1785}},{"uid":"c7d8a789e2378dbd","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/53//#testresult/c7d8a789e2378dbd","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690654228378,"stop":1690654230226,"duration":1848}},{"uid":"80762ccaf1dea88a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/52//#testresult/80762ccaf1dea88a","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690567840319,"stop":1690567842151,"duration":1832}},{"uid":"5e5ec26ade08e43b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/51//#testresult/5e5ec26ade08e43b","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690481480823,"stop":1690481482485,"duration":1662}},{"uid":"6c6ae7a2bf48a4f6","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/50//#testresult/6c6ae7a2bf48a4f6","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690395056360,"stop":1690395058242,"duration":1882}}]},"tags":[]},"source":"db49c5ad8c9e91ca.json","parameterValues":["null","preprod"]}