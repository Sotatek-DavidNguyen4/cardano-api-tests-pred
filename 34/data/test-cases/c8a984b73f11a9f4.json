{"uid":"c8a984b73f11a9f4","name":"verify that get data for address analytics unSuccessfully with address","fullName":"tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress","historyId":"aef54857d6fc8e6b36a8977c7a343ca3","time":{"start":1689012786169,"stop":1689012788088,"duration":1919},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1689012774886,"stop":1689012775621,"duration":735},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1689012786163,"stop":1689012786164,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get an adddress analytics","time":{"start":1689012786169,"stop":1689012787910,"duration":1741},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"address","value":"123"},{"name":"type","value":"TWO_WEEK"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Verify error response","time":{"start":1689012787910,"stop":1689012788088,"duration":178},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"statusCode","value":"400"},{"name":"message","value":"Wallet address not found"},{"name":"errorCode","value":"BC_404-ADDRESS_NOT_FOUND"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1689012788092,"stop":1689012788092,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"postconditions","time":{"start":1689013030751,"stop":1689013030751,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testClass","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testMethod","value":"verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.addresses.AddressAnalyticsTests"},{"name":"host","value":"fv-az445-212"},{"name":"thread","value":"2429@fv-az445-212.TestNG-test=Cardano API test -3(14)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"epic","value":"cardano"},{"name":"feature","value":"api-addresses"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"123"},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":19,"broken":1,"skipped":0,"passed":13,"unknown":0,"total":33},"items":[{"uid":"413ca87c52b4ec27","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/33//#testresult/413ca87c52b4ec27","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688926314725,"stop":1688926316838,"duration":2113}},{"uid":"358aa4a5ccf0f066","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/32//#testresult/358aa4a5ccf0f066","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688839919650,"stop":1688839921443,"duration":1793}},{"uid":"d7172ae746326837","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/31//#testresult/d7172ae746326837","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688753574315,"stop":1688753576095,"duration":1780}},{"uid":"874a64291bd5d535","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/30//#testresult/874a64291bd5d535","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688667133963,"stop":1688667135912,"duration":1949}},{"uid":"30643178699ce515","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/29//#testresult/30643178699ce515","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688580805900,"stop":1688580807852,"duration":1952}},{"uid":"382ca98e4768e3be","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/28//#testresult/382ca98e4768e3be","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688494421252,"stop":1688494423017,"duration":1765}},{"uid":"7cc88d3d8445ca17","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/27//#testresult/7cc88d3d8445ca17","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688407958034,"stop":1688407959749,"duration":1715}},{"uid":"58be4ba8cc5b9eed","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/26//#testresult/58be4ba8cc5b9eed","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688321508544,"stop":1688321510303,"duration":1759}},{"uid":"ba28b774181dfd7e","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/25//#testresult/ba28b774181dfd7e","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688235096761,"stop":1688235098487,"duration":1726}},{"uid":"a39c6245f6fdb95a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/24//#testresult/a39c6245f6fdb95a","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688148746519,"stop":1688148748292,"duration":1773}},{"uid":"82d504992f589a0a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/23//#testresult/82d504992f589a0a","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1688062569867,"stop":1688062571885,"duration":2018}},{"uid":"4bf58631898a1f64","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/22//#testresult/4bf58631898a1f64","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1687975974287,"stop":1687975976265,"duration":1978}},{"uid":"d64411d4dc508f42","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/21//#testresult/d64411d4dc508f42","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687889569158,"stop":1687889570686,"duration":1528}},{"uid":"13d09201525fa4e7","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/20//#testresult/13d09201525fa4e7","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687803191283,"stop":1687803192783,"duration":1500}},{"uid":"b96045861d962798","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/19//#testresult/b96045861d962798","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687716733169,"stop":1687716735076,"duration":1907}},{"uid":"9de5441ac64b495","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/18//#testresult/9de5441ac64b495","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687630315745,"stop":1687630317576,"duration":1831}},{"uid":"ad374ba407953e79","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/17//#testresult/ad374ba407953e79","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687543965207,"stop":1687543967087,"duration":1880}},{"uid":"3a6aafdade0c0ebb","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/16//#testresult/3a6aafdade0c0ebb","status":"failed","statusDetails":"1 expectation failed.\nExpected status code <400> but was <500>.\n","time":{"start":1687457477387,"stop":1687457478859,"duration":1472}},{"uid":"2afdb8ae047daeab","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/15//#testresult/2afdb8ae047daeab","status":"broken","statusDetails":"Read timed out","time":{"start":1687371254084,"stop":1687371316517,"duration":62433}},{"uid":"c54f3074583e716c","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/14//#testresult/c54f3074583e716c","status":"passed","time":{"start":1687284621142,"stop":1687284623323,"duration":2181}}]},"tags":[]},"source":"c8a984b73f11a9f4.json","parameterValues":["123","preprod"]}