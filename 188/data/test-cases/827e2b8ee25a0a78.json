{"uid":"827e2b8ee25a0a78","name":"verify that get list token with size key","fullName":"tests.tokens.Tokens.getListTokenWithSizeKey","historyId":"2bbfc319e6f05c5d26326c55c7eb8cd1","time":{"start":1702318418893,"stop":1702318420718,"duration":1825},"status":"failed","statusMessage":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[]0>","statusTrace":"org.junit.ComparisonFailure: [Value of field 'size' is wrong] expected:<[2]0> but was:<[]0>\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat microservices.token.steps.TokenSteps.then_verifyFilterTokensResponse(TokenSteps.java:33)\n\tat tests.tokens.Tokens.getListTokenWithSizeKey(Tokens.java:59)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"setUp","time":{"start":1702318418892,"stop":1702318418892,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"status":"failed","statusMessage":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[]0>","statusTrace":"org.junit.ComparisonFailure: [Value of field 'size' is wrong] expected:<[2]0> but was:<[]0>\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat microservices.token.steps.TokenSteps.then_verifyFilterTokensResponse(TokenSteps.java:33)\n\tat tests.tokens.Tokens.getListTokenWithSizeKey(Tokens.java:59)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get list token","time":{"start":1702318418893,"stop":1702318420716,"duration":1823},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"paramsToken","value":"{size=[  ]}"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"verify that current page of token","time":{"start":1702318420717,"stop":1702318420718,"duration":1},"status":"failed","statusMessage":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[]0>","statusTrace":"org.junit.ComparisonFailure: [Value of field 'size' is wrong] expected:<[2]0> but was:<[]0>\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat microservices.token.steps.TokenSteps.then_verifyFilterTokensResponse(TokenSteps.java:33)\n\tat tests.tokens.Tokens.getListTokenWithSizeKey(Tokens.java:59)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"tokensModel","value":"TokensModel(data=[], totalItems=0, totalPages=0, currentPage=0)"},{"name":"param","value":"{size=[  ]}"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[{"name":"tearDown","time":{"start":1702318420719,"stop":1702318420719,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"labels":[{"name":"package","value":"tests.tokens.Tokens"},{"name":"testClass","value":"tests.tokens.Tokens"},{"name":"testMethod","value":"getListTokenWithSizeKey"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.tokens.Tokens"},{"name":"host","value":"fv-az651-222"},{"name":"thread","value":"2378@fv-az651-222.TestNG-test=Cardano API test -1(13)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"  "},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":166,"broken":2,"skipped":0,"passed":19,"unknown":0,"total":187},"items":[{"uid":"ba87ceb4d93524d8","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/187//#testresult/ba87ceb4d93524d8","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1702231922322,"stop":1702231924438,"duration":2116}},{"uid":"52ee430a5f7cead0","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/186//#testresult/52ee430a5f7cead0","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1702145515892,"stop":1702145517587,"duration":1695}},{"uid":"d487a5bbb7296291","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/185//#testresult/d487a5bbb7296291","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1702059193104,"stop":1702059195378,"duration":2274}},{"uid":"aac503dbf41d1dfc","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/184//#testresult/aac503dbf41d1dfc","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701972806212,"stop":1701972807952,"duration":1740}},{"uid":"959f8c27fded5ad7","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/183//#testresult/959f8c27fded5ad7","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701886403254,"stop":1701886405458,"duration":2204}},{"uid":"5dfe4b3cdffd806a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/182//#testresult/5dfe4b3cdffd806a","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[]0>","time":{"start":1701799987596,"stop":1701799988930,"duration":1334}},{"uid":"1b068d8bb8af850a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/181//#testresult/1b068d8bb8af850a","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701713616147,"stop":1701713617931,"duration":1784}},{"uid":"d19afb63f5301725","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/180//#testresult/d19afb63f5301725","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701627126948,"stop":1701627128623,"duration":1675}},{"uid":"a20866f51d73ded5","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/179//#testresult/a20866f51d73ded5","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701540715849,"stop":1701540717362,"duration":1513}},{"uid":"bb38ae2f0ff66b31","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/178//#testresult/bb38ae2f0ff66b31","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701454401154,"stop":1701454402755,"duration":1601}},{"uid":"8da374111fb43013","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/177//#testresult/8da374111fb43013","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701368013099,"stop":1701368014872,"duration":1773}},{"uid":"7ffaed3ac3d3e87f","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/176//#testresult/7ffaed3ac3d3e87f","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701282307841,"stop":1701282373786,"duration":65945}},{"uid":"f6cc7d843c43d862","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/175//#testresult/f6cc7d843c43d862","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701195209560,"stop":1701195211265,"duration":1705}},{"uid":"1140af67a1d790f3","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/174//#testresult/1140af67a1d790f3","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701108803081,"stop":1701108804696,"duration":1615}},{"uid":"72148fc1e42935c2","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/173//#testresult/72148fc1e42935c2","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1701022298131,"stop":1701022299808,"duration":1677}},{"uid":"22106e5191db2410","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/172//#testresult/22106e5191db2410","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1700935932234,"stop":1700935934115,"duration":1881}},{"uid":"faee02eea0393d53","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/171//#testresult/faee02eea0393d53","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1700849553814,"stop":1700849555538,"duration":1724}},{"uid":"69c5866ea5a019f8","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/170//#testresult/69c5866ea5a019f8","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1700763173402,"stop":1700763175311,"duration":1909}},{"uid":"52027eccae96f0ca","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/169//#testresult/52027eccae96f0ca","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1700676786977,"stop":1700676788807,"duration":1830}},{"uid":"a77bd2e5e1608d43","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/168//#testresult/a77bd2e5e1608d43","status":"failed","statusDetails":"[Value of field 'size' is wrong] expected:<[2]0> but was:<[1]0>","time":{"start":1700590451874,"stop":1700590453767,"duration":1893}}]},"tags":[]},"source":"827e2b8ee25a0a78.json","parameterValues":["  ","preprod"]}