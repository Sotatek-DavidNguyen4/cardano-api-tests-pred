{"uid":"3be63d2ca05b4208","name":"verify that get data for address analytics unSuccessfully with address","fullName":"tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress","historyId":"aef54857d6fc8e6b36a8977c7a343ca3","time":{"start":1691691095493,"stop":1691691097307,"duration":1814},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"preconditions","time":{"start":1691691080382,"stop":1691691081370,"duration":988},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setUp","time":{"start":1691691095490,"stop":1691691095491,"duration":1},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[{"name":"get an adddress analytics","time":{"start":1691691095493,"stop":1691691097024,"duration":1531},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"address","value":"123"},{"name":"type","value":"TWO_WEEK"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Verify error response","time":{"start":1691691097024,"stop":1691691097304,"duration":280},"status":"failed","statusMessage":"Incorrect error message expected [Wallet address not found] but found [type not valid]","statusTrace":"java.lang.AssertionError: Incorrect error message expected [Wallet address not found] but found [type not valid]\n\tat org.testng.Assert.fail(Assert.java:97)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:136)\n\tat org.testng.Assert.assertEquals(Assert.java:118)\n\tat org.testng.Assert.assertEquals(Assert.java:575)\n\tat microservices.common.steps.BaseSteps.then_verifyErrorResponse(BaseSteps.java:13)\n\tat tests.addresses.AddressAnalyticsTests.verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress(AddressAnalyticsTests.java:36)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\n\tat java.lang.Thread.run(Thread.java:750)\n","steps":[],"attachments":[],"parameters":[{"name":"statusCode","value":"400"},{"name":"message","value":"Wallet address not found"},{"name":"errorCode","value":"BC_404-ADDRESS_NOT_FOUND"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},"afterStages":[{"name":"tearDown","time":{"start":1691691097308,"stop":1691691097308,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"postconditions","time":{"start":1691691309925,"stop":1691691309925,"duration":0},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"package","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testClass","value":"tests.addresses.AddressAnalyticsTests"},{"name":"testMethod","value":"verifyGetAddressAnalyticsResponseUnsuccessfullyWithAddress"},{"name":"parentSuite","value":"Cardano Regression Suite"},{"name":"suite","value":"Cardano API test "},{"name":"subSuite","value":"tests.addresses.AddressAnalyticsTests"},{"name":"host","value":"fv-az572-160"},{"name":"thread","value":"2343@fv-az572-160.TestNG-test=Cardano API test -3(14)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"api-addresses"},{"name":"epic","value":"cardano"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"arg0","value":"123"},{"name":"env","value":"preprod"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":49,"broken":2,"skipped":0,"passed":13,"unknown":0,"total":64},"items":[{"uid":"654f98c4bc264e87","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/64//#testresult/654f98c4bc264e87","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691604715974,"stop":1691604718158,"duration":2184}},{"uid":"67dc7cb3fc725e4","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/63//#testresult/67dc7cb3fc725e4","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691518311817,"stop":1691518314035,"duration":2218}},{"uid":"a7f6877031c554fb","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/62//#testresult/a7f6877031c554fb","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691431852196,"stop":1691431854499,"duration":2303}},{"uid":"7ce79ed730814a66","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/61//#testresult/7ce79ed730814a66","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691345417129,"stop":1691345419045,"duration":1916}},{"uid":"acfd3602ba1b0d3b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/60//#testresult/acfd3602ba1b0d3b","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691258991794,"stop":1691258994005,"duration":2211}},{"uid":"87ffe5d33beb93f5","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/59//#testresult/87ffe5d33beb93f5","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691172668010,"stop":1691172669984,"duration":1974}},{"uid":"cd605c099b14826f","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/58//#testresult/cd605c099b14826f","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1691086254569,"stop":1691086256658,"duration":2089}},{"uid":"3080bbfe5e918dfc","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/57//#testresult/3080bbfe5e918dfc","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690999868391,"stop":1690999870502,"duration":2111}},{"uid":"bc6c7e5fcabfda31","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/56//#testresult/bc6c7e5fcabfda31","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690913456862,"stop":1690913459026,"duration":2164}},{"uid":"5acab715c163770b","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/55//#testresult/5acab715c163770b","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690827092849,"stop":1690827094702,"duration":1853}},{"uid":"3707200e628fee47","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/54//#testresult/3707200e628fee47","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690740603682,"stop":1690740605689,"duration":2007}},{"uid":"5414f0e9334a5f2a","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/53//#testresult/5414f0e9334a5f2a","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690654226223,"stop":1690654228368,"duration":2145}},{"uid":"ea93dae570f65adb","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/52//#testresult/ea93dae570f65adb","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690567838233,"stop":1690567840307,"duration":2074}},{"uid":"cfc87671225ed7d","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/51//#testresult/cfc87671225ed7d","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690481478810,"stop":1690481480811,"duration":2001}},{"uid":"e50a4e4e030a8fef","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/50//#testresult/e50a4e4e030a8fef","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690395054239,"stop":1690395056354,"duration":2115}},{"uid":"6f22a5670226a8b1","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/49//#testresult/6f22a5670226a8b1","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690308679639,"stop":1690308681349,"duration":1710}},{"uid":"2ebafc42bf95aba1","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/48//#testresult/2ebafc42bf95aba1","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690222404521,"stop":1690222406287,"duration":1766}},{"uid":"b7f84c7731e8db2f","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/47//#testresult/b7f84c7731e8db2f","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690135842727,"stop":1690135844541,"duration":1814}},{"uid":"9ef2614a51a66a5","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/46//#testresult/9ef2614a51a66a5","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1690049445211,"stop":1690049447061,"duration":1850}},{"uid":"7d2317c8b0bbebe8","reportUrl":"https://Sotatek-DavidNguyen4.github.io/cardano-api-tests-preprod/45//#testresult/7d2317c8b0bbebe8","status":"failed","statusDetails":"Incorrect error message expected [Wallet address not found] but found [type not valid]","time":{"start":1689963142668,"stop":1689963144623,"duration":1955}}]},"tags":[]},"source":"3be63d2ca05b4208.json","parameterValues":["123","preprod"]}